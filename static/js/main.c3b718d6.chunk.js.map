{"version":3,"sources":["controlers/services/queryRequest.ts","controlers/services/userRequest.ts","containers/containersCommonFile/containerIdentify.tsx","containers/containersCommonFile/containeEmployee.tsx","containers/containersCommonFile/containerObservation.tsx","containers/containersRescission/containerStability.tsx","containers/containersRescission/containerAnalyzeRH.tsx","containers/containersRescission/containerBenefits.tsx","containers/containersRescission/containerRemuneration.tsx","containers/containersRescission/containerFundsRHRescission.tsx","layoutPage/FormPageRescission.tsx","App.tsx","index.tsx"],"names":["QueryRequest","typeReq","url","server","module","service","port","dataSource","debug","consult","type","this","SendRequestWebService","reqType","params","mountUrl","setService","setPort","setTypeReq","headers","Headers","append","window","btoa","username","fetch","createUrlRest","mode","method","body","JSON","stringify","then","resp","Promise","res","rej","option","json","jso","status","ContainerIdentify","useState","name","value","fields","setFields","nomfun","numcad","numemp","tipcol","titred","codcar","dados","setDados","dataUserRequest","useEffect","nomccu","nomfil","supime","labelCol","span","wrapperCol","labelAlign","onFieldsChange","_","allFields","gutter","Item","label","readOnly","ContainerEmployee","Option","Select","rules","required","message","title","allowClear","showSearch","placeholder","optionFilterProp","filterOption","input","children","toLowerCase","indexOf","toLocaleLowerCase","ContainerObservation","key","usu","dateTime","role","description","setDataSource","count","setCount","onFinish","values","console","log","Object","entries","now","Date","toLocaleString","timeZone","newObs","toString","prev","style","marginLeft","block","htmlType","TextArea","showCount","maxLength","columns","dataIndex","width","ContainerStability","dateBegin","dateEnd","bordered","ContainerAnalyzeRH","unCheckedChildren","checkedChildren","ContainerBenefits","Form","useForm","form","visible","setVisible","descriptionBenef","amount","total","ModalForm","okText","cancelText","onCancel","onOk","addItem","min","addonBefore","submit","render","text","record","index","DeleteOutlined","color","fontSize","onClick","filter","item","onDelete","Provider","onFormFinish","forms","newData","typeItem","descriptItem","amountItem","totalItem","num","marginBottom","ContainerRemuneration","ContainerFundsRHRescission","FormPageRescission","App","className","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c3b718d6.chunk.js","sourcesContent":["export class QueryRequest {\r\n  private typeReq = 2;\r\n  private url = \"localhost:8080\";\r\n  private server = \"http://localhost:8080/\";\r\n  private module = \"rubi\";\r\n  private service = \"\";\r\n  private port = \"\";\r\n  private dataSource? = \"\";\r\n  private debug? = false;\r\n  private consult? = \"\";\r\n\r\n  public setTypeReq(type: number) {\r\n    this.typeReq = type;\r\n  }\r\n\r\n  public setUrl(url: string) {\r\n    this.url = url;\r\n  }\r\n\r\n  public setServer(server: string) {\r\n    this.server = server;\r\n  }\r\n\r\n  public setModule(module: string) {\r\n    this.module = module;\r\n  }\r\n\r\n  public setService(service: string) {\r\n    this.service = service;\r\n  }\r\n\r\n  public setPort(port: string) {\r\n    this.port = port;\r\n  }\r\n\r\n  public setDataSource(dataSource: string) {\r\n    this.dataSource = dataSource;\r\n  }\r\n\r\n  public setDebug(debug: boolean) {\r\n    this.debug = debug;\r\n  }\r\n\r\n  public setConsult(consult: string) {\r\n    this.consult = consult;\r\n  }\r\n\r\n  //1-Genérica 2-Não Genérica\r\n  public createUrlRest() {\r\n    if (this.typeReq === 1) {\r\n      return (\r\n        \"http://\" + this.url + \"/SXI/GenericConsult?consult=\" + this.consult\r\n      );\r\n    } else if (this.typeReq === 2 && this.dataSource && this.debug === true) {\r\n      return (\r\n        \"http://\" +\r\n        this.url +\r\n        \"/SXI/G5Rest?server=\" +\r\n        this.server +\r\n        \"&module=\" +\r\n        this.module +\r\n        \"&service=\" +\r\n        this.service +\r\n        \"&port=\" +\r\n        this.port +\r\n        \"&DATASOURCEATTRNAME=\" +\r\n        this.dataSource +\r\n        \"&DEBUG=true\"\r\n      );\r\n    } else if (this.typeReq === 2 && this.dataSource) {\r\n      return (\r\n        \"http://\" +\r\n        this.url +\r\n        \"/SXI/G5Rest?server=\" +\r\n        this.server +\r\n        \"&module=\" +\r\n        this.module +\r\n        \"&service=\" +\r\n        this.service +\r\n        \"&port=\" +\r\n        this.port +\r\n        \"&DATASOURCEATTRNAME=\" +\r\n        this.dataSource\r\n      );\r\n    } else\r\n      return (\r\n        \"http://\" +\r\n        this.url +\r\n        \"/SXI/G5Rest?server=\" +\r\n        this.server +\r\n        \"&module=\" +\r\n        this.module +\r\n        \"&service=\" +\r\n        this.service +\r\n        \"&port=\" +\r\n        this.port\r\n      );\r\n  }\r\n}\r\n","import { QueryRequest } from \"./queryRequest\";\r\n\r\nexport function sendRequest_old() {\r\n  const mountUrl: QueryRequest = new QueryRequest();\r\n\r\n  mountUrl.setConsult(\"consulta_solicitante_CVC\");\r\n  mountUrl.setUrl(\"localhost:8080\");\r\n  mountUrl.setTypeReq(1);\r\n\r\n  const xhttp = new XMLHttpRequest();\r\n\r\n  xhttp.open(\"GET\", mountUrl.createUrlRest(), false);\r\n  xhttp.send();\r\n  let responseArray = JSON.parse(xhttp.responseText);\r\n  //console.log(responseArray[3]);\r\n  return responseArray[1];\r\n}\r\n\r\nexport function sendRequest(reqType, service, port, params?) {\r\n  const mountUrl: QueryRequest = new QueryRequest();\r\n\r\n  const username = \"senior\";\r\n  const password = \"senior\";\r\n\r\n  mountUrl.setService(service);\r\n  mountUrl.setPort(port);\r\n  mountUrl.setTypeReq(2);\r\n\r\n  const xhttp = new XMLHttpRequest();\r\n  const param = params;\r\n\r\n  xhttp.open(reqType, mountUrl.createUrlRest(), false);\r\n  xhttp.setRequestHeader(\r\n    \"Authorization\",\r\n    \"Basic \" + window.btoa(username + \":\" + password)\r\n  );\r\n  xhttp.setRequestHeader(\"Accept\", \"application/json;charset=utf-8\");\r\n  xhttp.setRequestHeader(\"user\", \"senior\");\r\n\r\n  xhttp.send(JSON.stringify(param));\r\n  let responseArray = JSON.parse(xhttp.responseText);\r\n\r\n  //console.log(responseArray);\r\n  return responseArray;\r\n}\r\n\r\nexport function requestCauseDismissal() {\r\n  const mountUrl: QueryRequest = new QueryRequest();\r\n  mountUrl.setConsult(\"causa_demissao\");\r\n  mountUrl.setUrl(\"localhost:8080\");\r\n  mountUrl.setTypeReq(1);\r\n\r\n  const xhttp = new XMLHttpRequest();\r\n  xhttp.open(\"GET\", mountUrl.createUrlRest(), false);\r\n  xhttp.send();\r\n  let responseArray = JSON.parse(xhttp.responseText);\r\n  //console.log(responseArray);\r\n  return responseArray;\r\n}\r\n\r\nexport function sendRequestWeb() {\r\n  const mountUrl: QueryRequest = new QueryRequest();\r\n  const url =\r\n    \"http://localhost:8080/SXI/G5Rest?server=http://localhost:8080&module=rubi&service=br.com.cvc.wf.rescisao&port=GetCausaRecisao&DATASOURCEATTRNAME=CausaDemissao&DEBUG=true\";\r\n\r\n  const username = \"senior\";\r\n  const password = \"senior\";\r\n\r\n  mountUrl.setUrl(\"localhost:8080\");\r\n  mountUrl.setServer(\"http://localhost:8080/\");\r\n  mountUrl.setModule(\"rubi\");\r\n  mountUrl.setService(\"Altera.Feriado\");\r\n  mountUrl.setPort(\"TesteWeb\");\r\n\r\n  const xhttp = new XMLHttpRequest();\r\n  const param = {\r\n    tipoMens: \"Dia\",\r\n  };\r\n\r\n  xhttp.open(\"POST\", url, false);\r\n  xhttp.setRequestHeader(\r\n    \"Authorization\",\r\n    \"Basic \" + window.btoa(username + \":\" + password)\r\n  );\r\n  xhttp.setRequestHeader(\"Accept\", \"application/json;charset=utf-8\");\r\n  xhttp.setRequestHeader(\"user\", \"senior\");\r\n\r\n  xhttp.send(JSON.stringify(param));\r\n  let responseArray = JSON.parse(xhttp.responseText);\r\n\r\n  //console.log(responseArray);\r\n  return responseArray.causaDemissao;\r\n}\r\n\r\nexport function SendRequestWebService(reqType, service, port, params?) {\r\n  /* const url = \"http://localhost:8080/SXI/GenericConsult?consult=causa_demissao\";\r\n  const url2 =\r\n    \"http://localhost:8080/SXI/G5Rest?server=http://localhost:8080&module=rubi&service=br.com.cvc.wf.rescisao&port=GetCausaRecisao&DATASOURCEATTRNAME=CausaDemissao&DEBUG=true\";\r\n\r\n  const url3 =\r\n    \"http://localhost:8080/SXI/G5Rest?server=http://localhost:8080/&module=rubi&service=Altera.Feriado&port=TesteWeb\";\r\n */\r\n\r\n  const mountUrl: QueryRequest = new QueryRequest();\r\n  const username = \"senior\";\r\n  const password = \"senior\";\r\n\r\n  mountUrl.setService(service);\r\n  mountUrl.setPort(port);\r\n  mountUrl.setTypeReq(2);\r\n\r\n  let headers = new Headers();\r\n\r\n  headers.append(\"Accept\", \"application/json;charset=utf-8\");\r\n  headers.append(\r\n    \"Authorization\",\r\n    \"Basic \" + window.btoa(username + \":\" + password)\r\n  );\r\n  headers.append(\"user\", \"senior\");\r\n\r\n  let response = fetch(mountUrl.createUrlRest(), {\r\n    mode: \"cors\",\r\n    method: \"post\",\r\n    headers: headers,\r\n    body: JSON.stringify(params),\r\n  }).then((resp) => {\r\n    let promise = new Promise((res, rej) => {\r\n      let option = resp.json().then((jso) => {\r\n        return jso;\r\n      });\r\n      if (resp.status === 200) {\r\n        res(option);\r\n      } else {\r\n        rej(\"erro\");\r\n      }\r\n    });\r\n    /* Retorna o valor dentro da [PromiseResult] */\r\n    return promise;\r\n  });\r\n\r\n  //console.log(response);\r\n  return response;\r\n}\r\n","import { Input, Form, Row, Col } from \"antd\";\r\nimport \"./container.css\";\r\nimport { SendRequestWebService } from \"../../controlers/services/userRequest\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { FieldData } from \"./containerInterface\";\r\n\r\nexport let userAprover: any = {\r\n  nomfun: \"\",\r\n  numcad: \"\",\r\n  numemp: \"\",\r\n  tipcol: \"\",\r\n  titred: \"\",\r\n  codcar: \"\",\r\n};\r\n\r\nexport default function ContainerIdentify() {\r\n  const [fields, setFields] = useState<FieldData[]>([\r\n    { name: \"fullname\", value: \"\" },\r\n    { name: \"registry\", value: \"\" },\r\n    { name: \"subsidiary\", value: \"\" },\r\n    { name: \"office\", value: \"\" },\r\n    { name: \"boss\", value: \"\" },\r\n  ]);\r\n\r\n  const [dados, setDados] = useState<any>([\r\n    {\r\n      nomfun: \"\",\r\n      numcad: \"\",\r\n      numemp: \"\",\r\n      tipcol: \"\",\r\n      titred: \"\",\r\n      codcar: \"\",\r\n    },\r\n  ]);\r\n\r\n  const paramName = {\r\n    nomfun: \"\",\r\n  };\r\n\r\n  const dataUserRequest = SendRequestWebService(\r\n    \"POST\",\r\n    \"br.com.cvc.wf.rescisao\",\r\n    \"GetDadosColaborador\",\r\n    paramName\r\n  );\r\n\r\n  useEffect(() => {\r\n    dataUserRequest.then((resp: any) => {\r\n      setDados({\r\n        ...dados,\r\n        nomfun: resp.nomfun,\r\n        numcad: resp.numcad,\r\n        numemp: resp.numemp,\r\n        tipcol: resp.tipcol,\r\n        titred: resp.titred,\r\n        codcar: resp.codcar,\r\n      });\r\n      setFields([\r\n        ...fields,\r\n        { name: [\"fullname\"], value: resp.nomfun },\r\n        { name: [\"registry\"], value: resp.numcad },\r\n        { name: [\"subsidiary\"], value: resp.nomccu },\r\n        { name: [\"office\"], value: resp.nomfil },\r\n        { name: [\"boss\"], value: resp.supime },\r\n      ]);\r\n    });\r\n  }, []);\r\n\r\n  userAprover = {\r\n    nomfun: dados.nomfun,\r\n    numcad: dados.numcad,\r\n    numemp: dados.numemp,\r\n    tipcol: dados.tipcol,\r\n    titred: dados.titred,\r\n    codcar: dados.codcar,\r\n  };\r\n\r\n  //console.log(userAprover);\r\n\r\n  return (\r\n    <>\r\n      <fieldset>\r\n        <legend>Identificação do Solicitante</legend>\r\n        <Form\r\n          labelCol={{ span: 10 }}\r\n          wrapperCol={{ span: 12 }}\r\n          labelAlign=\"left\"\r\n          fields={fields}\r\n          onFieldsChange={(_, allFields) => {}}\r\n        >\r\n          <Row gutter={50}>\r\n            <Col span={12}>\r\n              <Form.Item name={\"fullname\"} label={\"Nome Solicitante\"}>\r\n                <Input readOnly />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={12}>\r\n              <Form.Item name={\"registry\"} label={\"Matrícula\"}>\r\n                <Input readOnly />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Row gutter={50}>\r\n            <Col span={12}>\r\n              <Form.Item name={\"office\"} label={\"Cargo Solicitante\"}>\r\n                <Input readOnly />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={12}>\r\n              <Form.Item name={\"subsidiary\"} label={\"Filial\"}>\r\n                <Input readOnly />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Row gutter={50}>\r\n            <Col span={12}>\r\n              <Form.Item name={\"boss\"} label={\"Superior Imediato\"}>\r\n                <Input readOnly />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={12}>\r\n              <Form.Item></Form.Item>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </fieldset>\r\n    </>\r\n  );\r\n}\r\n","import { Input, Form, Row, Col, Select, Table, Tooltip } from \"antd\";\r\nimport \"./container.css\";\r\nimport { useState } from \"react\";\r\nimport { FieldData } from \"./containerInterface\";\r\nimport { SendRequestWebService } from \"../../controlers/services/userRequest\";\r\n\r\nexport let infoColab = {\r\n  nomfun: \"\",\r\n  numcad: \"\",\r\n  numemp: \"\",\r\n  tipcol: \"\",\r\n  titred: \"\",\r\n  codcar: \"\",\r\n};\r\n\r\nexport default function ContainerEmployee() {\r\n  const [fields, setFields] = useState<FieldData[]>([\r\n    { name: [\"registryEmployee\"], value: \"\" },\r\n    { name: [\"positionemployee\"], value: \"\" },\r\n    { name: [\"subsidiaryEmployee\"], value: \"\" },\r\n    { name: [\"bossEmployee\"], value: \"\" },\r\n    { name: [\"custCenter\"], value: \"\" },\r\n  ]);\r\n\r\n  function ChooseColab(value) {\r\n    let paramNameEmp = {\r\n      nomfun: value[0].value,\r\n    };\r\n\r\n    const response = SendRequestWebService(\r\n      \"POST\",\r\n      \"br.com.cvc.wf.rescisao\",\r\n      \"GetDadosColaborador\",\r\n      paramNameEmp\r\n    );\r\n\r\n    response.then((resp: any) => {\r\n      infoColab.nomfun = resp.nomfun;\r\n      infoColab.numcad = resp.numcad;\r\n      infoColab.numemp = resp.numemp;\r\n      infoColab.tipcol = resp.tipcol;\r\n      infoColab.titred = resp.titred;\r\n      infoColab.codcar = resp.codcar;\r\n\r\n      setFields([\r\n        ...fields,\r\n        { name: [\"registryEmployee\"], value: resp.numcad },\r\n        { name: [\"positionemployee\"], value: resp.titred },\r\n        { name: [\"subsidiaryEmployee\"], value: resp.nomfil },\r\n        { name: [\"bossEmployee\"], value: resp.supime },\r\n        { name: [\"custCenter\"], value: resp.nomccu },\r\n      ]);\r\n    });\r\n\r\n    console.log(infoColab);\r\n  }\r\n\r\n  const { Option } = Select;\r\n\r\n  return (\r\n    <>\r\n      <fieldset>\r\n        <legend>Informações do Colaborador</legend>\r\n        <Form\r\n          labelCol={{ span: 10 }}\r\n          wrapperCol={{ span: 12 }}\r\n          labelAlign=\"left\"\r\n          fields={fields}\r\n          onFieldsChange={(_, allFields) => {\r\n            setFields(allFields);\r\n          }}\r\n        >\r\n          <Row gutter={20}>\r\n            <Col span={12}>\r\n              <Form.Item\r\n                name={[\"nameEmployee\"]}\r\n                label={\"Colaborador\"}\r\n                rules={[\r\n                  { required: true },\r\n                  { message: \"Obrigatório selecionar o colaborador.\" },\r\n                ]}\r\n              >\r\n                <Tooltip title=\"Selecione o nome do colaborador\">\r\n                  <Select\r\n                    allowClear\r\n                    showSearch\r\n                    placeholder=\"Selecione Colaborador\"\r\n                    optionFilterProp=\"children\"\r\n                    filterOption={(input, option) =>\r\n                      option?.children\r\n                        .toLowerCase()\r\n                        .indexOf(input.toLocaleLowerCase()) >= 0\r\n                    }\r\n                  >\r\n                    <Option value=\"Adriana Conceição\">Adriana Conceição</Option>\r\n                    <Option value=\"Roberto Mattos\">Roberto Mattos</Option>\r\n                    <Option value=\"Maria Eduarda Freitas\">\r\n                      Maria Eduarda Freitas\r\n                    </Option>\r\n                    <Option value=\"Tadeu Carvalho\">Tadeu Carvalho</Option>\r\n                  </Select>\r\n                </Tooltip>\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={12}>\r\n              <Form.Item name={[\"registryEmployee\"]} label={\"Matrícula\"}>\r\n                <Input readOnly />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Row gutter={20}>\r\n            <Col span={12}>\r\n              <Form.Item\r\n                name={[\"positionemployee\"]}\r\n                label={\"Cargo Colaborador\"}\r\n              >\r\n                <Input readOnly />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={12}>\r\n              <Form.Item name={[\"subsidiaryEmployee\"]} label={\"Filial\"}>\r\n                <Input readOnly />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Row gutter={20}>\r\n            <Col span={12}>\r\n              <Form.Item name={[\"bossEmployee\"]} label={\"Superior Imediato\"}>\r\n                <Input readOnly />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={12}>\r\n              <Form.Item name={[\"custCenter\"]} label={\"Centro de Custo\"}>\r\n                <Input readOnly />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Row gutter={20}>\r\n            <Col span={12}>\r\n              <Form.Item name={[\"localWork\"]} label={\"Posto de Trabalho\"}>\r\n                <Input readOnly />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={12}>\r\n              <Form.Item name={[\"salary\"]} label={\"Salário Atual\"}>\r\n                <Input readOnly />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row gutter={20}>\r\n            <Col span={12}>\r\n              <Form.Item name={[\"workHours\"]} label={\"Jornada de Trabalho\"}>\r\n                <Input readOnly />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={12}>\r\n              <Form.Item></Form.Item>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </fieldset>\r\n    </>\r\n  );\r\n}\r\n","import { Input, Form, Table, Button, Row, Col, Tooltip } from \"antd\";\r\nimport \"./container.css\";\r\nimport { useState } from \"react\";\r\nimport { FieldData } from \"./containerInterface\";\r\nimport { userAprover } from \"./containerIdentify\";\r\nimport { infoColab } from \"./containeEmployee\";\r\n//import { sendRequest } from \"../controlers/services/userRequest\";\r\n\r\n/* const onFinish = (value) => {\r\n  let today = new Date();\r\n\r\n    let paramNameEmp = {\r\n    nomapr: userAprover.nomfun,\r\n    nomafa: infoColab.nomfun,\r\n    nompap: \"RH Rescisão\",\r\n    tpcola: userAprover.tipcol,\r\n    tpcolb: infoColab.tipcol,\r\n    nmcada: userAprover.numcad,\r\n    nmcadb: infoColab.numcad,\r\n    nmempa: userAprover.numemp,\r\n    nmempb: infoColab.numemp,\r\n    cdcara: userAprover.codcar,\r\n    cdcarb: infoColab.codcar,\r\n    ttreda: userAprover.titred,\r\n    ttredb: infoColab.titred,\r\n    datobs: today,\r\n    desobs: value.descriptionApp,\r\n  }; \r\n\r\n    const response = sendRequest(\r\n    \"POST\",\r\n    \"br.com.cvc.wf.rescisao\",\r\n    \"SetHistoricoObs\",\r\n    paramNameEmp\r\n  ); \r\n  //console.log(paramNameEmp);\r\n  //console.log(userAprover);\r\n  //console.log(infoColab);\r\n}; */\r\n\r\nfunction ContainerObservation() {\r\n  const [fields, setFields] = useState<FieldData[]>([\r\n    { name: \"approver\", value: \"\" },\r\n  ]);\r\n\r\n  const [dataSource, setDataSource] = useState([\r\n    {\r\n      key: \"\",\r\n      usu: \"\",\r\n      dateTime: \"\",\r\n      role: \"\",\r\n      description: \"\",\r\n    },\r\n  ]);\r\n\r\n  const [count, setCount] = useState(0);\r\n\r\n  const columns = [\r\n    {\r\n      title: \"Nome\",\r\n      dataIndex: \"usu\",\r\n      key: \"key\",\r\n      width: \"20%\",\r\n    },\r\n    {\r\n      title: \"Cargo\",\r\n      dataIndex: \"office\",\r\n      key: \"key\",\r\n      width: \"20%\",\r\n    },\r\n    {\r\n      title: \"Data/Hora\",\r\n      dataIndex: \"dateTime\",\r\n      key: \"key\",\r\n      width: \"20%\",\r\n    },\r\n    {\r\n      title: \"Papel\",\r\n      dataIndex: \"paper\",\r\n      key: \"key\",\r\n      width: \"20%\",\r\n    },\r\n    {\r\n      title: \"Observações\",\r\n      dataIndex: \"description\",\r\n      key: \"key\",\r\n      width: \"20%\",\r\n    },\r\n  ];\r\n\r\n  interface obsItem {\r\n    key: string;\r\n    usu: string;\r\n    dateTime: string;\r\n    role: string;\r\n    description: string;\r\n  }\r\n\r\n  const onFinish = (values: string) => {\r\n    console.log(values);\r\n    console.log(values[\"approver\"]);\r\n    console.log(Object.entries(values));\r\n    const now = new Date();\r\n    console.log(now.toLocaleString(\"en-GB\", { timeZone: \"UTC\" }));\r\n    const newObs: obsItem = {\r\n      key: count.toString(),\r\n      usu: values[\"approver\"],\r\n      dateTime: now.toLocaleString(\"en-GB\", { timeZone: \"UTC\" }),\r\n      role: \"\",\r\n      description: values[\"descriptionApp\"],\r\n    };\r\n\r\n    setCount((prev) => prev + 1);\r\n    setDataSource((prev) => {\r\n      return [newObs, ...prev];\r\n    });\r\n\r\n    console.log(newObs);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <fieldset>\r\n        <legend>Observações</legend>\r\n        <Form\r\n          fields={fields}\r\n          onFieldsChange={(_, allFields) => {}}\r\n          onFinish={onFinish}\r\n        >\r\n          <Row gutter={20}>\r\n            <Col span={20}>\r\n              <Form.Item\r\n                name={\"approver\"}\r\n                label={\"Aprovador\"}\r\n                labelAlign=\"left\"\r\n                labelCol={{ span: 4 }}\r\n                wrapperCol={{ span: 10 }}\r\n              >\r\n                <Input style={{ marginLeft: \"25px\" }} />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={4}>\r\n              <Form.Item labelAlign=\"right\">\r\n                <Button block type=\"primary\" htmlType=\"submit\">\r\n                  Gravar\r\n                </Button>\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Tooltip title=\"Campo opcional para acrescentar observações. Após digitar pressionar tecla 'Gravar'.\">\r\n            <Form.Item\r\n              name={\"descriptionApp\"}\r\n              label={\"Observações\"}\r\n              labelAlign=\"left\"\r\n              labelCol={{ span: 4 }}\r\n            >\r\n              <Input.TextArea showCount maxLength={150} />\r\n            </Form.Item>\r\n          </Tooltip>\r\n          <Form.Item label={\"Histórico\"} labelAlign=\"left\">\r\n            <Table dataSource={dataSource} columns={columns}></Table>\r\n          </Form.Item>\r\n        </Form>\r\n      </fieldset>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ContainerObservation;\r\n","import { Input, Form, Row, Col, Select, Table, Tooltip } from \"antd\";\r\nimport \"../containersCommonFile/container.css\";\r\nimport { useState } from \"react\";\r\nimport { FieldData } from \"../containersCommonFile/containerInterface\";\r\nimport { SendRequestWebService } from \"../../controlers/services/userRequest\";\r\n\r\nexport default function ContainerStability() {\r\n  const data = [\r\n    {\r\n      key: 1,\r\n      type: \"Férias\",\r\n      dateBegin: \"12/10/2021\",\r\n      dateEnd: \"12/12/2021\",\r\n      description: \"Féria marcada\",\r\n    },\r\n  ];\r\n\r\n  const columns = [\r\n    {\r\n      title: \"Tipo\",\r\n      dataIndex: \"type\",\r\n      key: \"key\",\r\n      width: \"20%\",\r\n    },\r\n    {\r\n      title: \"Data Inicio\",\r\n      dataIndex: \"dateBegin\",\r\n      key: \"key\",\r\n      width: \"20%\",\r\n    },\r\n    {\r\n      title: \"Data Fim\",\r\n      dataIndex: \"dateEnd\",\r\n      key: \"key\",\r\n      width: \"20%\",\r\n    },\r\n    {\r\n      title: \"Descrição\",\r\n      dataIndex: \"description\",\r\n      key: \"key\",\r\n      width: \"40%\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <fieldset>\r\n        <legend>Estabilidades e Férias</legend>\r\n        <Form\r\n          //fields={fields}\r\n          onFieldsChange={(_, allFields) => {}}\r\n        >\r\n          <Form.Item name={[\"history\"]} labelAlign=\"left\">\r\n            <Table dataSource={data} columns={columns} bordered />\r\n          </Form.Item>\r\n        </Form>\r\n      </fieldset>\r\n    </>\r\n  );\r\n}\r\n","import { Form, Row, Col, Switch, Tooltip, Input } from \"antd\";\r\nimport \"../containersCommonFile/container.css\";\r\n\r\nexport default function ContainerAnalyzeRH() {\r\n  return (\r\n    <>\r\n      <fieldset>\r\n        <legend>Análise RH Rescisão</legend>\r\n        <Form\r\n          labelCol={{ span: 10 }}\r\n          wrapperCol={{ span: 9 }}\r\n          labelAlign=\"left\"\r\n        >\r\n          <Row gutter={20}>\r\n            <Col span={12}>\r\n              <Form.Item label={\"Análise de Contrato de Trabalho?\"}>\r\n                <Switch unCheckedChildren=\"Não\" checkedChildren=\"Sim\"></Switch>\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={12}>\r\n              <Form.Item label={\"Kit Demissão Pronto?\"}>\r\n                <Switch unCheckedChildren=\"Não\" checkedChildren=\"Sim\"></Switch>\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Row gutter={20}>\r\n            <Col span={12}>\r\n              <Form.Item label={\"Documento Docusign?\"}>\r\n                <Switch unCheckedChildren=\"Não\" checkedChildren=\"Sim\"></Switch>\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={12}>\r\n              <Form.Item></Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col span={20}>\r\n              <Form.Item\r\n                label={\"Link do Documento\"}\r\n                labelAlign=\"left\"\r\n                labelCol={{ span: 6 }}\r\n                wrapperCol={{ span: 10 }}\r\n              >\r\n                <Input />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col span={20}>\r\n              <Form.Item\r\n                label={\"Status Docusign\"}\r\n                labelCol={{ span: 6 }}\r\n                wrapperCol={{ span: 6 }}\r\n              >\r\n                <Input />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </fieldset>\r\n    </>\r\n  );\r\n}\r\n","import {\r\n  Form,\r\n  Row,\r\n  Col,\r\n  Table,\r\n  Switch,\r\n  Tooltip,\r\n  Input,\r\n  Button,\r\n  Modal,\r\n  InputNumber,\r\n  Select,\r\n} from \"antd\";\r\nimport Icon, { EditOutlined, DeleteOutlined } from \"@ant-design/icons\";\r\nimport \"../containersCommonFile/container.css\";\r\nimport { useState } from \"react\";\r\n\r\nexport default function ContainerBenefits() {\r\n  const [form] = Form.useForm();\r\n  const [visible, setVisible] = useState(false);\r\n  const [dataSource, setDataSource] = useState([\r\n    {\r\n      key: \"\",\r\n      type: \"\",\r\n      descriptionBenef: \"\",\r\n      amount: \"\",\r\n      total: \"\",\r\n    },\r\n  ]);\r\n  const [count, setCount] = useState(0);\r\n\r\n  const ModalForm = () => {\r\n    //const [form] = Form.useForm();\r\n    //console.log(\"teste\");\r\n    return (\r\n      <Modal\r\n        title=\"Informe um novo Item\"\r\n        visible={visible}\r\n        okText=\"Adicionar\"\r\n        cancelText=\"Sair\"\r\n        onCancel={() => setVisible(false)}\r\n        onOk={addItem}\r\n      >\r\n        <Form name=\"addItem\" form={form}>\r\n          <Form.Item name={\"typeItem\"} label={\"Tipo\"}>\r\n            <Select>\r\n              <Select.Option key={1} value=\"Proventos\">\r\n                Proventos\r\n              </Select.Option>\r\n              <Select.Option key={2} value=\"Vantagem\">\r\n                Vantagem\r\n              </Select.Option>\r\n              <Select.Option key={3} value=\"Descontos\">\r\n                Descontos\r\n              </Select.Option>\r\n            </Select>\r\n          </Form.Item>\r\n          <Form.Item name={\"descriptItem\"} label={\"Descrição\"}>\r\n            <Input />\r\n          </Form.Item>\r\n          <Form.Item name={\"amountItem\"} label={\"Quantidade\"}>\r\n            <InputNumber min={1} />\r\n          </Form.Item>\r\n          <Form.Item name={\"totalItem\"} label={\"Total em Valor\"}>\r\n            <InputNumber addonBefore=\"R$\" />\r\n          </Form.Item>\r\n        </Form>\r\n      </Modal>\r\n    );\r\n  };\r\n\r\n  interface Item {\r\n    key: string;\r\n    type: string;\r\n    descriptionBenef: string;\r\n    amount: string;\r\n    total: string;\r\n  }\r\n\r\n  const addItem = (value) => {\r\n    //console.log(value);\r\n    form.submit();\r\n  };\r\n\r\n  const onDelete = (record, index) => {\r\n    //console.log(record);\r\n    //console.log(index);\r\n\r\n    setDataSource((prev) => {\r\n      return prev.filter((item) => item.key !== record.key);\r\n    });\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: \"Tipo\",\r\n      dataIndex: \"type\",\r\n      key: \"type\",\r\n      width: \"20%\",\r\n    },\r\n    {\r\n      title: \"Descrição\",\r\n      dataIndex: \"descriptionBenef\",\r\n      key: \"descriptionBenef\",\r\n      width: \"40%\",\r\n    },\r\n    {\r\n      title: \"Quantidade\",\r\n      dataIndex: \"amount\",\r\n      key: \"amount\",\r\n      width: \"10%\",\r\n    },\r\n    {\r\n      title: \"Total em Valor\",\r\n      dataIndex: \"total\",\r\n      key: \"total\",\r\n      width: \"20%\",\r\n    },\r\n    {\r\n      title: \"Ação\",\r\n      dataIndex: \"action\",\r\n      key: \"action\",\r\n      width: \"10%\",\r\n      render: (text, record, index) =>\r\n        record.type ? (\r\n          <a>\r\n            <DeleteOutlined\r\n              style={{ color: \"red\", fontSize: \"20px\" }}\r\n              onClick={() => {\r\n                onDelete(record, index);\r\n              }}\r\n            />\r\n          </a>\r\n        ) : (\r\n          <a></a>\r\n        ),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <fieldset>\r\n        <legend>Verbas Benefícios</legend>\r\n        <Form.Provider\r\n          onFormFinish={(name, { values, forms }) => {\r\n            console.log(name);\r\n            console.log(values);\r\n            console.log(forms);\r\n            if (name === \"addItem\") {\r\n              const newData: Item = {\r\n                key: count.toString(),\r\n                type: values.typeItem,\r\n                descriptionBenef: values.descriptItem,\r\n                amount: values.amountItem,\r\n                total: values.totalItem,\r\n              };\r\n\r\n              setCount((num) => num + 1);\r\n\r\n              setDataSource((prev) => {\r\n                return [newData, ...prev];\r\n              });\r\n\r\n              console.log(newData);\r\n              console.log(dataSource);\r\n            }\r\n          }}\r\n        >\r\n          <Form\r\n            name=\"tableItem\"\r\n            form={form}\r\n            labelCol={{ span: 10 }}\r\n            wrapperCol={{ span: 9 }}\r\n            labelAlign=\"left\"\r\n          >\r\n            <Row gutter={20}>\r\n              <Col span={12}>\r\n                <Form.Item label={\"Preenchido manualmente?\"}>\r\n                  <Switch\r\n                    unCheckedChildren=\"Não\"\r\n                    checkedChildren=\"Sim\"\r\n                  ></Switch>\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Button\r\n                type=\"primary\"\r\n                style={{ marginBottom: 16 }}\r\n                onClick={() => setVisible(true)}\r\n              >\r\n                Novo Item\r\n              </Button>\r\n            </Row>\r\n            <Row>\r\n              <Col span={24}>\r\n                <Table dataSource={dataSource} columns={columns} />\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n          <ModalForm />\r\n        </Form.Provider>\r\n      </fieldset>\r\n    </>\r\n  );\r\n}\r\n","import {\r\n  Form,\r\n  Row,\r\n  Col,\r\n  Table,\r\n  Switch,\r\n  Tooltip,\r\n  Input,\r\n  Button,\r\n  Modal,\r\n  InputNumber,\r\n  Select,\r\n} from \"antd\";\r\nimport Icon, { EditOutlined, DeleteOutlined } from \"@ant-design/icons\";\r\nimport \"../containersCommonFile/container.css\";\r\nimport { useState } from \"react\";\r\n\r\nexport default function ContainerRemuneration() {\r\n  const [form] = Form.useForm();\r\n  const [visible, setVisible] = useState(false);\r\n  const [dataSource, setDataSource] = useState([\r\n    {\r\n      key: \"\",\r\n      type: \"\",\r\n      descriptionBenef: \"\",\r\n      amount: \"\",\r\n      total: \"\",\r\n    },\r\n  ]);\r\n  const [count, setCount] = useState(0);\r\n\r\n  const ModalForm = () => {\r\n    //const [form] = Form.useForm();\r\n    //console.log(\"teste\");\r\n    return (\r\n      <Modal\r\n        title=\"Informe um novo Item\"\r\n        visible={visible}\r\n        okText=\"Adicionar\"\r\n        cancelText=\"Sair\"\r\n        onCancel={() => setVisible(false)}\r\n        onOk={addItem}\r\n      >\r\n        <Form name=\"addItem\" form={form}>\r\n          <Form.Item name={\"typeItem\"} label={\"Tipo\"}>\r\n            <Select>\r\n              <Select.Option key={1} value=\"Proventos\">\r\n                Proventos\r\n              </Select.Option>\r\n              <Select.Option key={2} value=\"Vantagem\">\r\n                Vantagem\r\n              </Select.Option>\r\n              <Select.Option key={3} value=\"Descontos\">\r\n                Descontos\r\n              </Select.Option>\r\n            </Select>\r\n          </Form.Item>\r\n          <Form.Item name={\"descriptItem\"} label={\"Descrição\"}>\r\n            <Input />\r\n          </Form.Item>\r\n          <Form.Item name={\"amountItem\"} label={\"Quantidade\"}>\r\n            <InputNumber min={1} />\r\n          </Form.Item>\r\n          <Form.Item name={\"totalItem\"} label={\"Total em Valor\"}>\r\n            <InputNumber addonBefore=\"R$\" />\r\n          </Form.Item>\r\n        </Form>\r\n      </Modal>\r\n    );\r\n  };\r\n\r\n  interface Item {\r\n    key: string;\r\n    type: string;\r\n    descriptionBenef: string;\r\n    amount: string;\r\n    total: string;\r\n  }\r\n\r\n  const addItem = () => {\r\n    form.submit();\r\n  };\r\n\r\n  const onDelete = (record, index) => {\r\n    //console.log(record);\r\n    //console.log(index);\r\n\r\n    setDataSource((prev) => {\r\n      return prev.filter((item) => item.key !== record.key);\r\n    });\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: \"Tipo\",\r\n      dataIndex: \"type\",\r\n      key: \"type\",\r\n      width: \"20%\",\r\n    },\r\n    {\r\n      title: \"Descrição\",\r\n      dataIndex: \"descriptionBenef\",\r\n      key: \"descriptionBenef\",\r\n      width: \"40%\",\r\n    },\r\n    {\r\n      title: \"Quantidade\",\r\n      dataIndex: \"amount\",\r\n      key: \"amount\",\r\n      width: \"10%\",\r\n    },\r\n    {\r\n      title: \"Total em Valor\",\r\n      dataIndex: \"total\",\r\n      key: \"total\",\r\n      width: \"20%\",\r\n    },\r\n    {\r\n      title: \"Ação\",\r\n      dataIndex: \"action\",\r\n      key: \"action\",\r\n      width: \"10%\",\r\n      render: (text, record, index) =>\r\n        record.type ? (\r\n          <a>\r\n            <DeleteOutlined\r\n              style={{ color: \"red\", fontSize: \"20px\" }}\r\n              onClick={() => {\r\n                onDelete(record, index);\r\n              }}\r\n            />\r\n          </a>\r\n        ) : (\r\n          <a></a>\r\n        ),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <fieldset>\r\n        <legend>Verbas Remuneração</legend>\r\n        <Form.Provider\r\n          onFormFinish={(name, { values, forms }) => {\r\n            console.log(name);\r\n            console.log(values);\r\n            console.log(forms);\r\n            if (name === \"addItem\") {\r\n              const newData: Item = {\r\n                key: count.toString(),\r\n                type: values.typeItem,\r\n                descriptionBenef: values.descriptItem,\r\n                amount: values.amountItem,\r\n                total: values.totalItem,\r\n              };\r\n\r\n              setCount((num) => num + 1);\r\n\r\n              setDataSource((prev) => {\r\n                return [newData, ...prev];\r\n              });\r\n\r\n              console.log(newData);\r\n              console.log(dataSource);\r\n            }\r\n          }}\r\n        >\r\n          <Form\r\n            name=\"tableItem\"\r\n            form={form}\r\n            labelCol={{ span: 10 }}\r\n            wrapperCol={{ span: 9 }}\r\n            labelAlign=\"left\"\r\n          >\r\n            <Row gutter={20}>\r\n              <Col span={12}>\r\n                <Form.Item label={\"Preenchido manualmente?\"}>\r\n                  <Switch\r\n                    unCheckedChildren=\"Não\"\r\n                    checkedChildren=\"Sim\"\r\n                  ></Switch>\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Button\r\n                type=\"primary\"\r\n                style={{ marginBottom: 16 }}\r\n                onClick={() => setVisible(true)}\r\n              >\r\n                Novo Item\r\n              </Button>\r\n            </Row>\r\n            <Row>\r\n              <Col span={24}>\r\n                <Table dataSource={dataSource} columns={columns} />\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n          <ModalForm />\r\n        </Form.Provider>\r\n      </fieldset>\r\n    </>\r\n  );\r\n}\r\n","import {\r\n  Form,\r\n  Row,\r\n  Col,\r\n  Table,\r\n  Select,\r\n  Tooltip,\r\n  Input,\r\n  Button,\r\n  Modal,\r\n  InputNumber,\r\n} from \"antd\";\r\nimport Icon, { EditOutlined, DeleteOutlined } from \"@ant-design/icons\";\r\nimport \"../containersCommonFile/container.css\";\r\nimport { useState } from \"react\";\r\n\r\nexport default function ContainerFundsRHRescission() {\r\n  const [form] = Form.useForm();\r\n  const [visible, setVisible] = useState(false);\r\n  const [dataSource, setDataSource] = useState([\r\n    {\r\n      key: \"\",\r\n      type: \"\",\r\n      descriptionBenef: \"\",\r\n      amount: \"\",\r\n      total: \"\",\r\n    },\r\n  ]);\r\n  const [count, setCount] = useState(0);\r\n\r\n  const ModalForm = () => {\r\n    //const [form] = Form.useForm();\r\n    //console.log(\"teste\");\r\n    return (\r\n      <Modal\r\n        title=\"Informe um novo Item\"\r\n        visible={visible}\r\n        okText=\"Adicionar\"\r\n        cancelText=\"Sair\"\r\n        onCancel={() => setVisible(false)}\r\n        onOk={addItem}\r\n      >\r\n        <Form name=\"addItem\" form={form}>\r\n          <Form.Item name={\"typeItem\"} label={\"Tipo\"}>\r\n            <Select>\r\n              <Select.Option key={1} value=\"Proventos\">\r\n                Proventos\r\n              </Select.Option>\r\n              <Select.Option key={2} value=\"Vantagem\">\r\n                Vantagem\r\n              </Select.Option>\r\n              <Select.Option key={3} value=\"Descontos\">\r\n                Descontos\r\n              </Select.Option>\r\n            </Select>\r\n          </Form.Item>\r\n          <Form.Item name={\"descriptItem\"} label={\"Descrição\"}>\r\n            <Input />\r\n          </Form.Item>\r\n          <Form.Item name={\"amountItem\"} label={\"Quantidade\"}>\r\n            <InputNumber min={1} />\r\n          </Form.Item>\r\n          <Form.Item name={\"totalItem\"} label={\"Total em Valor\"}>\r\n            <InputNumber addonBefore=\"R$\" />\r\n          </Form.Item>\r\n        </Form>\r\n      </Modal>\r\n    );\r\n  };\r\n\r\n  interface Item {\r\n    key: string;\r\n    type: string;\r\n    descriptionBenef: string;\r\n    amount: string;\r\n    total: string;\r\n  }\r\n\r\n  const addItem = (value) => {\r\n    //console.log(value);\r\n    form.submit();\r\n  };\r\n\r\n  const onDelete = (record, index) => {\r\n    //console.log(record);\r\n    //console.log(index);\r\n\r\n    setDataSource((prev) => {\r\n      return prev.filter((item) => item.key !== record.key);\r\n    });\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: \"Tipo\",\r\n      dataIndex: \"type\",\r\n      key: \"type\",\r\n      width: \"20%\",\r\n    },\r\n    {\r\n      title: \"Descrição\",\r\n      dataIndex: \"descriptionBenef\",\r\n      key: \"descriptionBenef\",\r\n      width: \"40%\",\r\n    },\r\n    {\r\n      title: \"Quantidade\",\r\n      dataIndex: \"amount\",\r\n      key: \"amount\",\r\n      width: \"10%\",\r\n    },\r\n    {\r\n      title: \"Total em Valor\",\r\n      dataIndex: \"total\",\r\n      key: \"total\",\r\n      width: \"20%\",\r\n    },\r\n    {\r\n      title: \"Ação\",\r\n      dataIndex: \"action\",\r\n      key: \"action\",\r\n      width: \"10%\",\r\n      render: (text, record, index) =>\r\n        record.type ? (\r\n          <a>\r\n            <DeleteOutlined\r\n              style={{ color: \"red\", fontSize: \"20px\" }}\r\n              onClick={() => {\r\n                onDelete(record, index);\r\n              }}\r\n            />\r\n          </a>\r\n        ) : (\r\n          <a></a>\r\n        ),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <fieldset>\r\n        <legend>Verbas RH Rescisão</legend>\r\n        <Form.Provider\r\n          onFormFinish={(name, { values, forms }) => {\r\n            console.log(name);\r\n            console.log(values);\r\n            console.log(forms);\r\n            if (name === \"addItem\") {\r\n              const newData: Item = {\r\n                key: count.toString(),\r\n                type: values.typeItem,\r\n                descriptionBenef: values.descriptItem,\r\n                amount: values.amountItem,\r\n                total: values.totalItem,\r\n              };\r\n\r\n              setCount((num) => num + 1);\r\n\r\n              setDataSource((prev) => {\r\n                return [newData, ...prev];\r\n              });\r\n\r\n              console.log(newData);\r\n              console.log(dataSource);\r\n            }\r\n          }}\r\n        >\r\n          <Form\r\n            name=\"tableItem\"\r\n            form={form}\r\n            labelCol={{ span: 10 }}\r\n            wrapperCol={{ span: 9 }}\r\n            labelAlign=\"left\"\r\n          >\r\n            <Row>\r\n              <Button\r\n                type=\"primary\"\r\n                style={{ marginBottom: 16 }}\r\n                onClick={() => setVisible(true)}\r\n              >\r\n                Novo Item\r\n              </Button>\r\n            </Row>\r\n            <Row>\r\n              <Col span={24}>\r\n                <Table dataSource={dataSource} columns={columns} />\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n          <ModalForm />\r\n        </Form.Provider>\r\n      </fieldset>\r\n    </>\r\n  );\r\n}\r\n","import ContainerIdentify from \"../containers/containersCommonFile/containerIdentify\";\r\nimport ContainerEmployee from \"../containers/containersCommonFile/containeEmployee\";\r\nimport ContainerRecission from \"../containers/containersRescission/containerRecission\";\r\nimport ContainerObservation from \"../containers/containersCommonFile/containerObservation\";\r\nimport ContainerStability from \"../containers/containersRescission/containerStability\";\r\nimport ContainerAnalyzeRH from \"../containers/containersRescission/containerAnalyzeRH\";\r\nimport ContainerBenefits from \"../containers/containersRescission/containerBenefits\";\r\nimport ContainerRemuneration from \"../containers/containersRescission/containerRemuneration\";\r\nimport ContainerFundsRHRescission from \"../containers/containersRescission/containerFundsRHRescission\";\r\n\r\nexport default function FormPageRescission() {\r\n  return (\r\n    <>\r\n      <div>\r\n        <ContainerIdentify />\r\n        <ContainerEmployee />\r\n        <ContainerStability />\r\n\r\n        <ContainerAnalyzeRH />\r\n        <ContainerBenefits />\r\n        <ContainerRemuneration />\r\n        <ContainerFundsRHRescission />\r\n        <ContainerObservation />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\nimport ContainerIdentify from \"./containers/containersCommonFile/containerIdentify\";\nimport ContainerEmployee from \"./containers/containersCommonFile/containeEmployee\";\nimport \"./App.css\";\nimport ContainerRecission from \"./containers/containersRescission/containerRecission\";\nimport ContainerObservation from \"./containers/containersCommonFile/containerObservation\";\nimport ContainerMovimentHistory from \"./containers/containersMoviment/containerMovimentHistory\";\nimport ContainerSalaryMoviment from \"./containers/containersMoviment/containerSalaryMoviment\";\nimport ContainerStructuralMoviment from \"./containers/containersMoviment/containerStructuralMoviment\";\nimport ContainerInfoVacation from \"./containers/containersVacation/containerInfoVacation\";\nimport ContainerVacation from \"./containers/containersVacation/containerVacation\";\nimport ContainerStability from \"./containers/containersRescission/containerStability\";\nimport FormPageMovimentation from \"./layoutPage/FormPageMovimentation\";\nimport FormPageRescission from \"./layoutPage/FormPageRescission\";\nimport FormPageVacation from \"./layoutPage/FormPageVacation\";\nimport ContainerMoviment from \"./containers/containersMoviment/containerMoviment\";\nimport LayoutPage from \"./layoutPage/LayoutPage\";\nimport Teste from \"./containers/teste\";\nimport RoutePages from \"./controlers/routes/routes\";\nimport { user } from \"@seniorsistemas/senior-platform-data\";\nimport Demo from \"./layoutPage/LayoutPage\";\nimport { Layout, Tabs, Input, Form } from \"antd\";\n\n//const { Header, Footer, Content } = Layout;\n\n//const { TabPane } = Tabs;\n\nfunction App() {\n  /*  user.getToken().then((v) => {\n    console.log(v);\n  });\n  user.getAuthHeader().then((aut) => console.log(aut));\n  user.getUserData().then((data) => console.log(data)); */\n  return (\n    <div className=\"App\">\n      <FormPageRescission />\n    </div>\n  );\n}\n\n/* const carro = [\"Painel 01\", \"Painel 02\", \"Painel 03\", \"Painel 04\"];\n\nfunction App() {\n  return (\n    <Tabs tabPosition=\"top\" defaultActiveKey=\"2\">\n      <TabPane tab=\"Tab 1\" key=\"1\">\n        <FormPageMovimentation />\n      </TabPane>\n      <TabPane tab=\"Tab 2\" key=\"2\">\n        <FormPageMovimentation />\n      </TabPane>\n      <TabPane tab=\"Tab 3\" key=\"3\">\n        <ContainerObservation />\n      </TabPane>\n    </Tabs>\n  );\n} */\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n//import \"./index.css\";\nimport App from \"./App\";\n//import LayoutPage from \"./layoutPage/LayoutPage\"; /*\n//import axios from \"axios\";\n/* Inicialmente tem que ser importado o pacote antd.css */\n//import \"antd/dist/antd.css\";\n/* Método para configuração do ant design */\n//import { ConfigProvider } from \"antd\";\n/* Configuração do idioma para portugues Brasil */\n//import ptBR from \"antd/lib/locale/pt_BR\";\n//import { TstArray } from \"./controlers/services/testes\";\n/* import {\n  requestCauseDismissal,\n  SendRequestWebService,\n} from \"./controlers/services/userRequest\"; */\n\n/* const url = \"http://localhost:8080/SXI/GenericConsult?consult=causa_demissao\";\nconst url2 =\n  \"http://localhost:8080/SXI/G5Rest?server=http://localhost:8080&module=rubi&service=br.com.cvc.wf.rescisao&port=GetCausaRecisao&DATASOURCEATTRNAME=CausaDemissao&DEBUG=true\";\n\nconst url3 =\n  \"http://localhost:8080/SXI/G5Rest?server=http://localhost:8080/&module=rubi&service=Altera.Feriado&port=TesteWeb\";\nconst url4 =\n  \"http://localhost:8080/SXI/G5Rest?server=http://localhost:8080/&module=rubi&service=com.senior.g5.rh.fp.consultarColaborador&port=ConsultarColaborador&DEBUG=true\";\n\nconst username = \"senior\";\nconst password = \"senior\"; */\n\n/* const config = {\n  withCredentials: true,\n  method: \"post\",\n  headers: {\n    Origin: \"*\",\n    \"Content-Type\": \"application/json;charset=utf-8\",\n    Authorization: \"Basic \" + window.btoa(username + \":\" + password),\n    user: \"senior\",\n  },\n  auth: {\n    username: \"senior\",\n    password: \"senior\",\n  },\n  responseEncoding: \"utf8\",\n  params: {},\n}; */\n\n/* let headers = new Headers();\n\nheaders.append(\"Accept\", \"application/json;charset=utf-8\");\nheaders.append(\n  \"Authorization\",\n  \"Basic \" + window.btoa(username + \":\" + password)\n);\nheaders.append(\"user\", \"senior\");\n\n\n/* fetch(url2, {\n  mode: \"cors\",\n  method: \"post\",\n  /* headers: {\n    Accept: \"application/json;charset=utf-8\",\n    Authorization: \"Basic \" + window.btoa(username + \":\" + password),\n    user: \"senior\",\n  }, \n  headers: headers,\n}).then((res) => {\n  return res.json().then((jso) => {\n    console.log(jso.causaDemissao);\n  });\n}); */\n\n/* fetch(url3, {\n  mode: \"cors\",\n  method: \"post\", */\n/* headers: {\n    Accept: \"application/json;charset=utf-8\",\n    Authorization: \"Basic \" + window.btoa(username + \":\" + password),\n    user: \"senior\",\n  }, */\n/* headers: headers,\n  body: JSON.stringify({\n    tipoMens: \"Dia\",\n  }),\n}).then((res) => {\n  return res.json().then((json) => {\n    console.log(json.mensagem);\n  });\n}); */\n\n/* axios\n  .post(url2, {\n    crossorigin: true,\n    headers: {\n      common: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n        WithCredentials: true,\n        \"Access-Control-Allow-Origin\": \"*\",\n        user: \"senior\",\n        Authorization: \"Basic \" + window.btoa(username + \":\" + password),\n      },\n      Origin: \"*\",\n      \"Content-Type\": \"application/json;charset=utf-8\",\n      Authorization: \"Basic \" + window.btoa(username + \":\" + password),\n      user: \"senior\",\n    },\n    //user: \"senior\",\n  })\n  .then((res) => {\n    console.log(res);\n  });\n\n  \n \n\naxios.defaults.headers.post[\"user\"] = \"senior\"; */\n\n/* const array = SendRequestWebService();\nvar array2 = [\"\"];\n\nconsole.log(array);\narray.then((cause: any) => {\n  \n  for (var val in cause) {\n    console.log(cause[val].desDem);\n    \n    array2.push(cause[val].desDem);\n  }\n  \n});\nconsole.log(array2); */\n\n/* const xhttp = new XMLHttpRequest();\nconst param = {\n  tipoMens: \"Dia\",\n};\n\nxhttp.open(\"POST\", url3, false);\nxhttp.setRequestHeader(\n  \"Authorization\",\n  \"Basic \" + window.btoa(username + \":\" + password)\n);\nxhttp.setRequestHeader(\"Accept\", \"application/json;charset=utf-8\");\nxhttp.setRequestHeader(\"user\", \"senior\");\n\nxhttp.send(JSON.stringify(param));\nlet responseArray = JSON.parse(xhttp.responseText);\n\nconsole.log(responseArray.mensagem); */\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}