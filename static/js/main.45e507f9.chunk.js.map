{"version":3,"sources":["containers/containersCommonFile/containerIdentify.tsx","containers/containersCommonFile/containeEmployee.tsx","containers/containersRescission/containerRecission.tsx","containers/containersCommonFile/containerObservation.tsx","containers/containersRescission/containerStability.tsx","containers/containersRescission/containerAnalyzeRH.tsx","containers/containersRescission/containerBenefits.tsx","containers/containersRescission/containerRemuneration.tsx","containers/containersRescission/containerFundsRHRescission.tsx","layoutPage/FormPageRescission.tsx","App.tsx","index.tsx"],"names":["ContainerIdentify","useState","name","value","fields","labelCol","span","wrapperCol","labelAlign","onFieldsChange","_","allFields","gutter","Item","label","readOnly","ContainerEmployee","setFields","Option","Select","rules","required","message","title","allowClear","showSearch","placeholder","optionFilterProp","filterOption","input","option","children","toLowerCase","indexOf","toLocaleLowerCase","arrayCausa","TypeWarning","dias","i","push","upFields","ContainerRecission","Form","useForm","form","tooltip","setTooltip","certificateCauseDead","certificateAskDemission","values","getFieldValue","validator","rule","Promise","resolve","map","aviso","index","causa","hidden","icon","UploadOutlined","format","weekDay","_d","getDay","reject","Error","style","marginLeft","day","unCheckedChildren","checkedChildren","ContainerObservation","key","usu","dateTime","role","description","dataSource","setDataSource","count","setCount","onFinish","now","Date","newObs","toString","toLocaleString","timeZone","prev","block","type","htmlType","TextArea","showCount","maxLength","columns","dataIndex","width","ContainerStability","dateBegin","dateEnd","bordered","ContainerAnalyzeRH","ContainerBenefits","visible","setVisible","descriptionBenef","amount","total","ModalForm","okText","cancelText","onCancel","onOk","addItem","min","addonBefore","submit","render","text","record","DeleteOutlined","color","fontSize","onClick","filter","item","onDelete","Provider","onFormFinish","forms","newData","typeItem","descriptItem","amountItem","totalItem","num","marginBottom","ContainerRemuneration","ContainerFundsRHRescission","FormPageRescission","App","className","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.45e507f9.chunk.js","sourcesContent":["import { Input, Form, Row, Col } from \"antd\";\r\nimport \"./container.css\";\r\nimport { useState } from \"react\";\r\nimport { FieldData } from \"./containerInterface\";\r\n\r\nexport default function ContainerIdentify() {\r\n  const [fields, setFields] = useState<FieldData[]>([\r\n    { name: \"fullname\", value: \"\" },\r\n    { name: \"registry\", value: \"\" },\r\n    { name: \"subsidiary\", value: \"\" },\r\n    { name: \"office\", value: \"\" },\r\n    { name: \"boss\", value: \"\" },\r\n  ]);\r\n\r\n  return (\r\n    <>\r\n      <fieldset>\r\n        <legend>Identificação do Solicitante</legend>\r\n        <Form\r\n          labelCol={{ span: 10 }}\r\n          wrapperCol={{ span: 12 }}\r\n          labelAlign=\"left\"\r\n          fields={fields}\r\n          onFieldsChange={(_, allFields) => {}}\r\n        >\r\n          <Row gutter={50}>\r\n            <Col span={12}>\r\n              <Form.Item name={\"fullname\"} label={\"Nome Solicitante\"}>\r\n                <Input readOnly />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={12}>\r\n              <Form.Item name={\"registry\"} label={\"Matrícula\"}>\r\n                <Input readOnly />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Row gutter={50}>\r\n            <Col span={12}>\r\n              <Form.Item name={\"office\"} label={\"Cargo Solicitante\"}>\r\n                <Input readOnly />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={12}>\r\n              <Form.Item name={\"subsidiary\"} label={\"Filial\"}>\r\n                <Input readOnly />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Row gutter={50}>\r\n            <Col span={12}>\r\n              <Form.Item name={\"boss\"} label={\"Superior Imediato\"}>\r\n                <Input readOnly />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={12}>\r\n              <Form.Item></Form.Item>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </fieldset>\r\n    </>\r\n  );\r\n}\r\n","import { Input, Form, Row, Col, Select, Tooltip } from \"antd\";\r\nimport \"./container.css\";\r\nimport { useState } from \"react\";\r\nimport { FieldData } from \"./containerInterface\";\r\n\r\nexport default function ContainerEmployee() {\r\n  const [fields, setFields] = useState<FieldData[]>([\r\n    { name: [\"registryEmployee\"], value: \"\" },\r\n    { name: [\"positionemployee\"], value: \"\" },\r\n    { name: [\"subsidiaryEmployee\"], value: \"\" },\r\n    { name: [\"bossEmployee\"], value: \"\" },\r\n    { name: [\"custCenter\"], value: \"\" },\r\n  ]);\r\n\r\n  const { Option } = Select;\r\n\r\n  return (\r\n    <>\r\n      <fieldset>\r\n        <legend>Informações do Colaborador</legend>\r\n        <Form\r\n          labelCol={{ span: 10 }}\r\n          wrapperCol={{ span: 12 }}\r\n          labelAlign=\"left\"\r\n          fields={fields}\r\n          onFieldsChange={(_, allFields) => {\r\n            setFields(allFields);\r\n          }}\r\n        >\r\n          <Row gutter={20}>\r\n            <Col span={12}>\r\n              <Form.Item\r\n                name={[\"nameEmployee\"]}\r\n                label={\"Colaborador\"}\r\n                rules={[\r\n                  { required: true },\r\n                  { message: \"Obrigatório selecionar o colaborador.\" },\r\n                ]}\r\n              >\r\n                <Tooltip title=\"Selecione o nome do colaborador\">\r\n                  <Select\r\n                    allowClear\r\n                    showSearch\r\n                    placeholder=\"Selecione Colaborador\"\r\n                    optionFilterProp=\"children\"\r\n                    filterOption={(input, option) =>\r\n                      option?.children\r\n                        .toLowerCase()\r\n                        .indexOf(input.toLocaleLowerCase()) >= 0\r\n                    }\r\n                  >\r\n                    <Option value=\"Adriana Conceição\">Adriana Conceição</Option>\r\n                    <Option value=\"Roberto Mattos\">Roberto Mattos</Option>\r\n                    <Option value=\"Maria Eduarda Freitas\">\r\n                      Maria Eduarda Freitas\r\n                    </Option>\r\n                    <Option value=\"Tadeu Carvalho\">Tadeu Carvalho</Option>\r\n                  </Select>\r\n                </Tooltip>\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={12}>\r\n              <Form.Item name={[\"registryEmployee\"]} label={\"Matrícula\"}>\r\n                <Input readOnly />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Row gutter={20}>\r\n            <Col span={12}>\r\n              <Form.Item\r\n                name={[\"positionemployee\"]}\r\n                label={\"Cargo Colaborador\"}\r\n              >\r\n                <Input readOnly />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={12}>\r\n              <Form.Item name={[\"subsidiaryEmployee\"]} label={\"Filial\"}>\r\n                <Input readOnly />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Row gutter={20}>\r\n            <Col span={12}>\r\n              <Form.Item name={[\"bossEmployee\"]} label={\"Superior Imediato\"}>\r\n                <Input readOnly />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={12}>\r\n              <Form.Item name={[\"custCenter\"]} label={\"Centro de Custo\"}>\r\n                <Input readOnly />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Row gutter={20}>\r\n            <Col span={12}>\r\n              <Form.Item name={[\"localWork\"]} label={\"Posto de Trabalho\"}>\r\n                <Input readOnly />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={12}>\r\n              <Form.Item name={[\"salary\"]} label={\"Salário Atual\"}>\r\n                <Input readOnly />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row gutter={20}>\r\n            <Col span={12}>\r\n              <Form.Item name={[\"workHours\"]} label={\"Jornada de Trabalho\"}>\r\n                <Input readOnly />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={12}>\r\n              <Form.Item></Form.Item>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </fieldset>\r\n    </>\r\n  );\r\n}\r\n","import {\r\n  Form,\r\n  Row,\r\n  Col,\r\n  Select,\r\n  DatePicker,\r\n  Upload,\r\n  Button,\r\n  Switch,\r\n  Tooltip,\r\n} from \"antd\";\r\nimport { UploadOutlined } from \"@ant-design/icons\";\r\nimport \"../containersCommonFile/container.css\";\r\nimport { useState } from \"react\";\r\nimport { FieldData } from \"../containersCommonFile/containerInterface\";\r\n\r\nvar arrayCausa = [\"\"];\r\n\r\narrayCausa = [\r\n  \"Inic.Empresa c/ Justa Causa\",\r\n  \"Inic.Empresa s/ Justa Causa\",\r\n  \"Inic.Empregado c/ Justa Causa\",\r\n  \"Inic.Empregado s/ Justa Causa\",\r\n  \"Culpa Reciproca\",\r\n  \"Transferencia p/ Outra Empresa\",\r\n  \"Transferencia p/ Outra Filial\",\r\n  \"Morte\",\r\n  \"Morte - Acidente Trabalho\",\r\n  \"Morte - Doenca Profissional\",\r\n  \"Abandono de Emprego\",\r\n  \"Fim do Contrato de Trabalho\",\r\n  \"Fim Antecipado C.T.- Empresa\",\r\n  \"Fim Antecipado C.T.- Empregado\",\r\n  \"Extinção da Empresa\",\r\n  \"Apos.Tempo Servico c/ Rescisao\",\r\n  \"Apos.Tempo Servico s/ Rescisao\",\r\n  \"Apos.p/ idade c/ Rescisao\",\r\n  \"Apos.p/ idade s/ Rescisao\",\r\n  \"Apos.p/ Invalidez - Ac.Trabalh\",\r\n  \"Apos.p/ Invalidez - Doenca Pro\",\r\n  \"Apos.p/ Invalidez - Outras\",\r\n  \"Aposentadoria Compulsória\",\r\n  \"Transferência por Sucessão\",\r\n  \"Transferência por Sucessão\",\r\n  \"Transferencia p/ Filial c/Onus\",\r\n];\r\n\r\nconst TypeWarning = [\r\n  \"Indenizado\",\r\n  \"Trabalhado\",\r\n  \"Trabalhado + Acréscimo\",\r\n  \"Reavido\",\r\n  \"Reavido Dispensado\",\r\n  \"Trabalhado(Rural)\",\r\n  \"Acordo Mútuo Indenizado\",\r\n  \"Acordo Mútuo Trabalhado\",\r\n];\r\n\r\nconst dias = [1];\r\nfor (let i = 2; i < 31; i++) {\r\n  dias.push(i);\r\n}\r\n\r\nlet upFields = [\r\n  { name: [\"rescissionCause\"], value: \"\" },\r\n  { name: [\"warningType\"], value: \"\" },\r\n  { name: [\"warningDate\"], value: \"\" },\r\n  { name: [\"dismissalDate\"], value: \"\" },\r\n  { name: [\"paymentDate\"], value: \"\" },\r\n  { name: [\"numDayWork\"], value: \"\" },\r\n  { name: [\"compSaturday\"], value: false },\r\n  { name: [\"fufillWork\"], value: false },\r\n  { name: [\"hiredOtherCompany\"], value: false },\r\n  { name: [\"vacancyReplace\"], value: false },\r\n];\r\n\r\nexport default function ContainerRecission() {\r\n  const [fields, setFields] = useState<FieldData[]>(upFields);\r\n\r\n  const [form] = Form.useForm();\r\n  const [tooltip, setTooltip] = useState(\"\");\r\n\r\n  const certificateCauseDead =\r\n    fields[0].value === \"Morte\" ||\r\n    fields[0].value === \"Morte - Acidente Trabalho\" ||\r\n    fields[0].value === \"Morte - Doenca Profissional\";\r\n\r\n  const certificateAskDemission =\r\n    fields[0].value === \"Inic.Empregado c/ Justa Causa\" ||\r\n    fields[0].value === \"Inic.Empregado s/ Justa Causa\";\r\n\r\n  const changeFields = (values) => {\r\n    upFields = [\r\n      { name: [\"rescissionCause\"], value: values[0].value },\r\n      { name: [\"warningType\"], value: values[1].value },\r\n      { name: [\"warningDate\"], value: values[3].value },\r\n      { name: [\"dismissalDate\"], value: values[4].value },\r\n      { name: [\"paymentDate\"], value: values[5].value },\r\n      { name: [\"numDayWork\"], value: values[6].value },\r\n      { name: [\"compSaturday\"], value: values[7].value },\r\n      { name: [\"fufillWork\"], value: values[8].value },\r\n      { name: [\"hiredOtherCompany\"], value: values[9].value },\r\n      { name: [\"vacancyReplace\"], value: values[11].value },\r\n    ];\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <fieldset>\r\n        <legend>Informações da Rescisão</legend>\r\n        <Form\r\n          form={form}\r\n          labelCol={{ span: 10 }}\r\n          wrapperCol={{ span: 9 }}\r\n          labelAlign=\"left\"\r\n          fields={fields}\r\n          onFieldsChange={(_, allFields) => {\r\n            changeFields(allFields);\r\n            setFields(upFields);\r\n          }}\r\n        >\r\n          <Row gutter={30}>\r\n            <Col span={12}>\r\n              <Tooltip title=\"Selecione a causa de demissão\">\r\n                <Form.Item\r\n                  name={[\"rescissionCause\"]}\r\n                  label={\"Causa da Rescisão:\"}\r\n                  rules={[\r\n                    ({ getFieldValue }) => ({\r\n                      validator(rule, value) {\r\n                        if (certificateCauseDead) {\r\n                          return Promise.resolve(\r\n                            setTooltip(\"Favor anexar o atestado de óbito\")\r\n                          );\r\n                        } else if (certificateAskDemission) {\r\n                          return Promise.resolve(\r\n                            setTooltip(\"Favor anexar a carta de demissão\")\r\n                          );\r\n                        }\r\n                        return;\r\n                      },\r\n                    }),\r\n                    {\r\n                      required: true,\r\n                      message: \"Obrigatório Selecionar tipo de aviso prévio.\",\r\n                    },\r\n                  ]}\r\n                  wrapperCol={{ span: 8 }}\r\n                >\r\n                  <Select placeholder=\"Selecione a Causa\">\r\n                    {arrayCausa.map((aviso, index) => {\r\n                      return (\r\n                        <Select.Option key={index} value={aviso}>\r\n                          {aviso}\r\n                        </Select.Option>\r\n                      );\r\n                    })}\r\n                  </Select>\r\n                </Form.Item>\r\n              </Tooltip>\r\n            </Col>\r\n            <Col span={12}>\r\n              <Tooltip title=\"Selecionar o tipo de aviso prévio\">\r\n                <Form.Item\r\n                  name={[\"warningType\"]}\r\n                  label={\"Tipo do Aviso Prévio:\"}\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: \"Obrigatório Selecionar tipo de aviso prévio.\",\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Select placeholder=\"Tipo de Aviso prévio\">\r\n                    {TypeWarning.map((causa, index) => {\r\n                      return (\r\n                        <Select.Option key={index} value={causa}>\r\n                          {causa}\r\n                        </Select.Option>\r\n                      );\r\n                    })}\r\n                  </Select>\r\n                </Form.Item>\r\n              </Tooltip>\r\n            </Col>\r\n          </Row>\r\n          <Row gutter={30}>\r\n            <Col span={12}>\r\n              <Tooltip title={tooltip}>\r\n                <Form.Item\r\n                  name={[\"attachDoc\"]}\r\n                  label={\"Anexo:\"}\r\n                  hidden={\r\n                    certificateCauseDead || certificateAskDemission\r\n                      ? false\r\n                      : true\r\n                  }\r\n                  rules={[\r\n                    { required: true, message: \"Obrigatório inserir o anexo.\" },\r\n                  ]}\r\n                >\r\n                  <Upload>\r\n                    <Button icon={<UploadOutlined />}>Click to Upload</Button>\r\n                  </Upload>\r\n                </Form.Item>\r\n              </Tooltip>\r\n            </Col>\r\n            <Col span={12}>\r\n              <Tooltip title=\"Informar a data de início do aviso prévio\">\r\n                <Form.Item\r\n                  name={[\"warningDate\"]}\r\n                  label={\"Data do Aviso Prévio: \"}\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message:\r\n                        \"Obrigatório informar a data de início do aviso prévio.\",\r\n                    },\r\n                  ]}\r\n                >\r\n                  <DatePicker allowClear format=\"DD/MM/YYYY\" />\r\n                </Form.Item>\r\n              </Tooltip>\r\n            </Col>\r\n          </Row>\r\n          <Row gutter={30}>\r\n            <Col span={12}>\r\n              <Tooltip title=\"Informar a data da demissão\">\r\n                <Form.Item\r\n                  name={[\"dismissalDate\"]}\r\n                  label={\"Data de Demissão: \"}\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: \"Obrigatório informar a data de demissão.\",\r\n                    },\r\n                    ({ getFieldValue }) => ({\r\n                      validator(rule, value) {\r\n                        const weekDay = value._d.getDay();\r\n\r\n                        if (weekDay === 1 || weekDay === 3) {\r\n                          return Promise.resolve();\r\n                        } else {\r\n                          return Promise.reject(\r\n                            new Error(\r\n                              \"Escolher somente a segunda-feira ou quarta\"\r\n                            )\r\n                          );\r\n                        }\r\n                      },\r\n                    }),\r\n                  ]}\r\n                >\r\n                  <DatePicker allowClear format=\"DD/MM/YYYY\" />\r\n                </Form.Item>\r\n              </Tooltip>\r\n            </Col>\r\n            <Col span={12}>\r\n              <Form.Item name={[\"paymentDate\"]} label={\"Data de Pagamento: \"}>\r\n                <DatePicker allowClear format=\"DD/MM/YYYY\" />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Row gutter={30}>\r\n            <Col span={12}>\r\n              <Tooltip title=\"Informar os dias trabalhados\">\r\n                <Form.Item\r\n                  name={[\"numDayWork\"]}\r\n                  label={\"Qtd Dias Trabalhado:\"}\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: \"Obrigatório informar os dias trabalhados.\",\r\n                    },\r\n                  ]}\r\n                  wrapperCol={{ span: 4 }}\r\n                >\r\n                  <Select\r\n                    placeholder=\"Dias Trabalhado\"\r\n                    style={{ marginLeft: \"90px\" }}\r\n                  >\r\n                    {dias.map((day, index) => {\r\n                      return (\r\n                        <Select.Option key={index} value={day}>\r\n                          {day}\r\n                        </Select.Option>\r\n                      );\r\n                    })}\r\n                  </Select>\r\n                </Form.Item>\r\n              </Tooltip>\r\n            </Col>\r\n          </Row>\r\n          {/* Inicio dos switchs */}\r\n          <div>\r\n            <Row gutter={20}>\r\n              <Col span={14}>\r\n                <Tooltip title=\"Informar se o sábado será compensado\">\r\n                  <Form.Item\r\n                    name={[\"compSaturday\"]}\r\n                    label={[\"Sábado compensado na semana?\"]}\r\n                  >\r\n                    <Switch\r\n                      unCheckedChildren=\"Não\"\r\n                      checkedChildren=\"Sim\"\r\n                    ></Switch>\r\n                  </Form.Item>\r\n                </Tooltip>\r\n              </Col>\r\n            </Row>\r\n            <Row gutter={20}>\r\n              <Col span={14}>\r\n                <Tooltip title=\"Informar se cumpriu a jornada semanal\">\r\n                  <Form.Item\r\n                    name={[\"fufillWork\"]}\r\n                    label={[\"Cumpriu a jornada semanal?\"]}\r\n                  >\r\n                    <Switch\r\n                      unCheckedChildren=\"Não\"\r\n                      checkedChildren=\"Sim\"\r\n                    ></Switch>\r\n                  </Form.Item>\r\n                </Tooltip>\r\n              </Col>\r\n            </Row>\r\n            <Row gutter={20}>\r\n              <Col span={14}>\r\n                <Tooltip title=\"Se contratado por outra empresa tem a opção de anexar carta\">\r\n                  <Form.Item\r\n                    name={[\"hiredOtherCompany\"]}\r\n                    label={[\"Funcionário contratado por outra empresa?\"]}\r\n                  >\r\n                    <Switch\r\n                      unCheckedChildren=\"Não\"\r\n                      checkedChildren=\"Sim\"\r\n                    ></Switch>\r\n                  </Form.Item>\r\n                </Tooltip>\r\n              </Col>\r\n              <Col span={8}>\r\n                <Tooltip title=\"Opcional para anexar a carta da outra outra empresa\">\r\n                  <Form.Item\r\n                    name={[\"attachLetter\"]}\r\n                    label={\"Anexo:\"}\r\n                    labelCol={{ span: 5 }}\r\n                    hidden={!fields[8].value}\r\n                  >\r\n                    <Upload>\r\n                      <Button icon={<UploadOutlined />}>Click to Upload</Button>\r\n                    </Upload>\r\n                  </Form.Item>\r\n                </Tooltip>\r\n              </Col>\r\n            </Row>\r\n            <Row gutter={20}>\r\n              <Col span={14}>\r\n                <Tooltip title=\"Informar se haverá reposição de vagas\">\r\n                  <Form.Item\r\n                    name={[\"vacancyReplace\"]}\r\n                    label={[\"Haverá reposição de vaga?\"]}\r\n                  >\r\n                    <Switch\r\n                      unCheckedChildren=\"Não\"\r\n                      checkedChildren=\"Sim\"\r\n                    ></Switch>\r\n                  </Form.Item>\r\n                </Tooltip>\r\n              </Col>\r\n            </Row>\r\n          </div>\r\n        </Form>\r\n      </fieldset>\r\n    </>\r\n  );\r\n}\r\n","import { Input, Form, Table, Button, Row, Col, Tooltip } from \"antd\";\r\nimport \"./container.css\";\r\nimport { useState } from \"react\";\r\nimport { FieldData } from \"./containerInterface\";\r\n\r\nfunction ContainerObservation() {\r\n  const [fields, setFields] = useState<FieldData[]>([\r\n    { name: \"approver\", value: \"\" },\r\n  ]);\r\n\r\n  const [dataSource, setDataSource] = useState([\r\n    {\r\n      key: \"\",\r\n      usu: \"\",\r\n      dateTime: \"\",\r\n      role: \"\",\r\n      description: \"\",\r\n    },\r\n  ]);\r\n\r\n  const [count, setCount] = useState(0);\r\n\r\n  const columns = [\r\n    {\r\n      title: \"Nome\",\r\n      dataIndex: \"usu\",\r\n      key: \"key\",\r\n      width: \"20%\",\r\n    },\r\n    {\r\n      title: \"Cargo\",\r\n      dataIndex: \"office\",\r\n      key: \"key\",\r\n      width: \"20%\",\r\n    },\r\n    {\r\n      title: \"Data/Hora\",\r\n      dataIndex: \"dateTime\",\r\n      key: \"key\",\r\n      width: \"20%\",\r\n    },\r\n    {\r\n      title: \"Papel\",\r\n      dataIndex: \"paper\",\r\n      key: \"key\",\r\n      width: \"20%\",\r\n    },\r\n    {\r\n      title: \"Observações\",\r\n      dataIndex: \"description\",\r\n      key: \"key\",\r\n      width: \"20%\",\r\n    },\r\n  ];\r\n\r\n  interface obsItem {\r\n    key: string;\r\n    usu: string;\r\n    dateTime: string;\r\n    role: string;\r\n    description: string;\r\n  }\r\n\r\n  const onFinish = (values: string) => {\r\n    const now = new Date();\r\n    const newObs: obsItem = {\r\n      key: count.toString(),\r\n      usu: values[\"approver\"],\r\n      dateTime: now.toLocaleString(\"en-GB\", { timeZone: \"UTC\" }),\r\n      role: \"\",\r\n      description: values[\"descriptionApp\"],\r\n    };\r\n\r\n    setCount((prev) => prev + 1);\r\n    setDataSource((prev) => {\r\n      return [newObs, ...prev];\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <fieldset>\r\n        <legend>Observações</legend>\r\n        <Form\r\n          fields={fields}\r\n          onFieldsChange={(_, allFields) => {}}\r\n          onFinish={onFinish}\r\n        >\r\n          <Row gutter={20}>\r\n            <Col span={20}>\r\n              <Form.Item\r\n                name={\"approver\"}\r\n                label={\"Aprovador\"}\r\n                labelAlign=\"left\"\r\n                labelCol={{ span: 4 }}\r\n                wrapperCol={{ span: 10 }}\r\n              >\r\n                <Input style={{ marginLeft: \"25px\" }} />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={4}>\r\n              <Form.Item labelAlign=\"right\">\r\n                <Button block type=\"primary\" htmlType=\"submit\">\r\n                  Gravar\r\n                </Button>\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Tooltip title=\"Campo opcional para acrescentar observações. Após digitar pressionar tecla 'Gravar'.\">\r\n            <Form.Item\r\n              name={\"descriptionApp\"}\r\n              label={\"Observações\"}\r\n              labelAlign=\"left\"\r\n              labelCol={{ span: 4 }}\r\n            >\r\n              <Input.TextArea showCount maxLength={150} />\r\n            </Form.Item>\r\n          </Tooltip>\r\n          <Form.Item label={\"Histórico\"} labelAlign=\"left\">\r\n            <Table dataSource={dataSource} columns={columns}></Table>\r\n          </Form.Item>\r\n        </Form>\r\n      </fieldset>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ContainerObservation;\r\n","import { Form, Table } from \"antd\";\r\nimport \"../containersCommonFile/container.css\";\r\n\r\nexport default function ContainerStability() {\r\n  const data = [\r\n    {\r\n      key: 1,\r\n      type: \"Férias\",\r\n      dateBegin: \"12/10/2021\",\r\n      dateEnd: \"12/12/2021\",\r\n      description: \"Féria marcada\",\r\n    },\r\n  ];\r\n\r\n  const columns = [\r\n    {\r\n      title: \"Tipo\",\r\n      dataIndex: \"type\",\r\n      key: \"key\",\r\n      width: \"20%\",\r\n    },\r\n    {\r\n      title: \"Data Inicio\",\r\n      dataIndex: \"dateBegin\",\r\n      key: \"key\",\r\n      width: \"20%\",\r\n    },\r\n    {\r\n      title: \"Data Fim\",\r\n      dataIndex: \"dateEnd\",\r\n      key: \"key\",\r\n      width: \"20%\",\r\n    },\r\n    {\r\n      title: \"Descrição\",\r\n      dataIndex: \"description\",\r\n      key: \"key\",\r\n      width: \"40%\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <fieldset>\r\n        <legend>Estabilidades e Férias</legend>\r\n        <Form>\r\n          <Form.Item name={[\"history\"]} labelAlign=\"left\">\r\n            <Table dataSource={data} columns={columns} bordered />\r\n          </Form.Item>\r\n        </Form>\r\n      </fieldset>\r\n    </>\r\n  );\r\n}\r\n","import { Form, Row, Col, Switch, Input } from \"antd\";\r\nimport \"../containersCommonFile/container.css\";\r\n\r\nexport default function ContainerAnalyzeRH() {\r\n  return (\r\n    <>\r\n      <fieldset>\r\n        <legend>Análise RH Rescisão</legend>\r\n        <Form\r\n          labelCol={{ span: 10 }}\r\n          wrapperCol={{ span: 9 }}\r\n          labelAlign=\"left\"\r\n        >\r\n          <Row gutter={20}>\r\n            <Col span={12}>\r\n              <Form.Item label={\"Análise de Contrato de Trabalho?\"}>\r\n                <Switch unCheckedChildren=\"Não\" checkedChildren=\"Sim\"></Switch>\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={12}>\r\n              <Form.Item label={\"Kit Demissão Pronto?\"}>\r\n                <Switch unCheckedChildren=\"Não\" checkedChildren=\"Sim\"></Switch>\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Row gutter={20}>\r\n            <Col span={12}>\r\n              <Form.Item label={\"Documento Docusign?\"}>\r\n                <Switch unCheckedChildren=\"Não\" checkedChildren=\"Sim\"></Switch>\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={12}>\r\n              <Form.Item></Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col span={20}>\r\n              <Form.Item\r\n                label={\"Link do Documento\"}\r\n                labelAlign=\"left\"\r\n                labelCol={{ span: 6 }}\r\n                wrapperCol={{ span: 10 }}\r\n              >\r\n                <Input />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col span={20}>\r\n              <Form.Item\r\n                label={\"Status Docusign\"}\r\n                labelCol={{ span: 6 }}\r\n                wrapperCol={{ span: 6 }}\r\n              >\r\n                <Input />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </fieldset>\r\n    </>\r\n  );\r\n}\r\n","import {\r\n  Form,\r\n  Row,\r\n  Col,\r\n  Table,\r\n  Switch,\r\n  Input,\r\n  Button,\r\n  Modal,\r\n  InputNumber,\r\n  Select,\r\n} from \"antd\";\r\nimport { DeleteOutlined } from \"@ant-design/icons\";\r\nimport \"../containersCommonFile/container.css\";\r\nimport { useState } from \"react\";\r\n\r\nexport default function ContainerBenefits() {\r\n  const [form] = Form.useForm();\r\n  const [visible, setVisible] = useState(false);\r\n  const [dataSource, setDataSource] = useState([\r\n    {\r\n      key: \"\",\r\n      type: \"\",\r\n      descriptionBenef: \"\",\r\n      amount: \"\",\r\n      total: \"\",\r\n    },\r\n  ]);\r\n  const [count, setCount] = useState(0);\r\n\r\n  const ModalForm = () => {\r\n    return (\r\n      <Modal\r\n        title=\"Informe um novo Item\"\r\n        visible={visible}\r\n        okText=\"Adicionar\"\r\n        cancelText=\"Sair\"\r\n        onCancel={() => setVisible(false)}\r\n        onOk={addItem}\r\n      >\r\n        <Form name=\"addItem\" form={form}>\r\n          <Form.Item name={\"typeItem\"} label={\"Tipo\"}>\r\n            <Select>\r\n              <Select.Option key={1} value=\"Proventos\">\r\n                Proventos\r\n              </Select.Option>\r\n              <Select.Option key={2} value=\"Vantagem\">\r\n                Vantagem\r\n              </Select.Option>\r\n              <Select.Option key={3} value=\"Descontos\">\r\n                Descontos\r\n              </Select.Option>\r\n            </Select>\r\n          </Form.Item>\r\n          <Form.Item name={\"descriptItem\"} label={\"Descrição\"}>\r\n            <Input />\r\n          </Form.Item>\r\n          <Form.Item name={\"amountItem\"} label={\"Quantidade\"}>\r\n            <InputNumber min={1} />\r\n          </Form.Item>\r\n          <Form.Item name={\"totalItem\"} label={\"Total em Valor\"}>\r\n            <InputNumber addonBefore=\"R$\" />\r\n          </Form.Item>\r\n        </Form>\r\n      </Modal>\r\n    );\r\n  };\r\n\r\n  interface Item {\r\n    key: string;\r\n    type: string;\r\n    descriptionBenef: string;\r\n    amount: string;\r\n    total: string;\r\n  }\r\n\r\n  const addItem = (value) => {\r\n    form.submit();\r\n  };\r\n\r\n  const onDelete = (record, index) => {\r\n    setDataSource((prev) => {\r\n      return prev.filter((item) => item.key !== record.key);\r\n    });\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: \"Tipo\",\r\n      dataIndex: \"type\",\r\n      key: \"type\",\r\n      width: \"20%\",\r\n    },\r\n    {\r\n      title: \"Descrição\",\r\n      dataIndex: \"descriptionBenef\",\r\n      key: \"descriptionBenef\",\r\n      width: \"40%\",\r\n    },\r\n    {\r\n      title: \"Quantidade\",\r\n      dataIndex: \"amount\",\r\n      key: \"amount\",\r\n      width: \"10%\",\r\n    },\r\n    {\r\n      title: \"Total em Valor\",\r\n      dataIndex: \"total\",\r\n      key: \"total\",\r\n      width: \"20%\",\r\n    },\r\n    {\r\n      title: \"Ação\",\r\n      dataIndex: \"action\",\r\n      key: \"action\",\r\n      width: \"10%\",\r\n      render: (text, record, index) =>\r\n        record.type ? (\r\n          <a>\r\n            <DeleteOutlined\r\n              style={{ color: \"red\", fontSize: \"20px\" }}\r\n              onClick={() => {\r\n                onDelete(record, index);\r\n              }}\r\n            />\r\n          </a>\r\n        ) : (\r\n          <a></a>\r\n        ),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <fieldset>\r\n        <legend>Verbas Benefícios</legend>\r\n        <Form.Provider\r\n          onFormFinish={(name, { values, forms }) => {\r\n            if (name === \"addItem\") {\r\n              const newData: Item = {\r\n                key: count.toString(),\r\n                type: values.typeItem,\r\n                descriptionBenef: values.descriptItem,\r\n                amount: values.amountItem,\r\n                total: values.totalItem,\r\n              };\r\n\r\n              setCount((num) => num + 1);\r\n\r\n              setDataSource((prev) => {\r\n                return [newData, ...prev];\r\n              });\r\n            }\r\n          }}\r\n        >\r\n          <Form\r\n            name=\"tableItem\"\r\n            form={form}\r\n            labelCol={{ span: 10 }}\r\n            wrapperCol={{ span: 9 }}\r\n            labelAlign=\"left\"\r\n          >\r\n            <Row gutter={20}>\r\n              <Col span={12}>\r\n                <Form.Item label={\"Preenchido manualmente?\"}>\r\n                  <Switch\r\n                    unCheckedChildren=\"Não\"\r\n                    checkedChildren=\"Sim\"\r\n                  ></Switch>\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Button\r\n                type=\"primary\"\r\n                style={{ marginBottom: 16 }}\r\n                onClick={() => setVisible(true)}\r\n              >\r\n                Novo Item\r\n              </Button>\r\n            </Row>\r\n            <Row>\r\n              <Col span={24}>\r\n                <Table dataSource={dataSource} columns={columns} />\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n          <ModalForm />\r\n        </Form.Provider>\r\n      </fieldset>\r\n    </>\r\n  );\r\n}\r\n","import {\r\n  Form,\r\n  Row,\r\n  Col,\r\n  Table,\r\n  Switch,\r\n  Input,\r\n  Button,\r\n  Modal,\r\n  InputNumber,\r\n  Select,\r\n} from \"antd\";\r\nimport { DeleteOutlined } from \"@ant-design/icons\";\r\nimport \"../containersCommonFile/container.css\";\r\nimport { useState } from \"react\";\r\n\r\nexport default function ContainerRemuneration() {\r\n  const [form] = Form.useForm();\r\n  const [visible, setVisible] = useState(false);\r\n  const [dataSource, setDataSource] = useState([\r\n    {\r\n      key: \"\",\r\n      type: \"\",\r\n      descriptionBenef: \"\",\r\n      amount: \"\",\r\n      total: \"\",\r\n    },\r\n  ]);\r\n  const [count, setCount] = useState(0);\r\n\r\n  const ModalForm = () => {\r\n    return (\r\n      <Modal\r\n        title=\"Informe um novo Item\"\r\n        visible={visible}\r\n        okText=\"Adicionar\"\r\n        cancelText=\"Sair\"\r\n        onCancel={() => setVisible(false)}\r\n        onOk={addItem}\r\n      >\r\n        <Form name=\"addItem\" form={form}>\r\n          <Form.Item name={\"typeItem\"} label={\"Tipo\"}>\r\n            <Select>\r\n              <Select.Option key={1} value=\"Proventos\">\r\n                Proventos\r\n              </Select.Option>\r\n              <Select.Option key={2} value=\"Vantagem\">\r\n                Vantagem\r\n              </Select.Option>\r\n              <Select.Option key={3} value=\"Descontos\">\r\n                Descontos\r\n              </Select.Option>\r\n            </Select>\r\n          </Form.Item>\r\n          <Form.Item name={\"descriptItem\"} label={\"Descrição\"}>\r\n            <Input />\r\n          </Form.Item>\r\n          <Form.Item name={\"amountItem\"} label={\"Quantidade\"}>\r\n            <InputNumber min={1} />\r\n          </Form.Item>\r\n          <Form.Item name={\"totalItem\"} label={\"Total em Valor\"}>\r\n            <InputNumber addonBefore=\"R$\" />\r\n          </Form.Item>\r\n        </Form>\r\n      </Modal>\r\n    );\r\n  };\r\n\r\n  interface Item {\r\n    key: string;\r\n    type: string;\r\n    descriptionBenef: string;\r\n    amount: string;\r\n    total: string;\r\n  }\r\n\r\n  const addItem = () => {\r\n    form.submit();\r\n  };\r\n\r\n  const onDelete = (record, index) => {\r\n    setDataSource((prev) => {\r\n      return prev.filter((item) => item.key !== record.key);\r\n    });\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: \"Tipo\",\r\n      dataIndex: \"type\",\r\n      key: \"type\",\r\n      width: \"20%\",\r\n    },\r\n    {\r\n      title: \"Descrição\",\r\n      dataIndex: \"descriptionBenef\",\r\n      key: \"descriptionBenef\",\r\n      width: \"40%\",\r\n    },\r\n    {\r\n      title: \"Quantidade\",\r\n      dataIndex: \"amount\",\r\n      key: \"amount\",\r\n      width: \"10%\",\r\n    },\r\n    {\r\n      title: \"Total em Valor\",\r\n      dataIndex: \"total\",\r\n      key: \"total\",\r\n      width: \"20%\",\r\n    },\r\n    {\r\n      title: \"Ação\",\r\n      dataIndex: \"action\",\r\n      key: \"action\",\r\n      width: \"10%\",\r\n      render: (text, record, index) =>\r\n        record.type ? (\r\n          <a>\r\n            <DeleteOutlined\r\n              style={{ color: \"red\", fontSize: \"20px\" }}\r\n              onClick={() => {\r\n                onDelete(record, index);\r\n              }}\r\n            />\r\n          </a>\r\n        ) : (\r\n          <a></a>\r\n        ),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <fieldset>\r\n        <legend>Verbas Remuneração</legend>\r\n        <Form.Provider\r\n          onFormFinish={(name, { values, forms }) => {\r\n            if (name === \"addItem\") {\r\n              const newData: Item = {\r\n                key: count.toString(),\r\n                type: values.typeItem,\r\n                descriptionBenef: values.descriptItem,\r\n                amount: values.amountItem,\r\n                total: values.totalItem,\r\n              };\r\n\r\n              setCount((num) => num + 1);\r\n\r\n              setDataSource((prev) => {\r\n                return [newData, ...prev];\r\n              });\r\n            }\r\n          }}\r\n        >\r\n          <Form\r\n            name=\"tableItem\"\r\n            form={form}\r\n            labelCol={{ span: 10 }}\r\n            wrapperCol={{ span: 9 }}\r\n            labelAlign=\"left\"\r\n          >\r\n            <Row gutter={20}>\r\n              <Col span={12}>\r\n                <Form.Item label={\"Preenchido manualmente?\"}>\r\n                  <Switch\r\n                    unCheckedChildren=\"Não\"\r\n                    checkedChildren=\"Sim\"\r\n                  ></Switch>\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Button\r\n                type=\"primary\"\r\n                style={{ marginBottom: 16 }}\r\n                onClick={() => setVisible(true)}\r\n              >\r\n                Novo Item\r\n              </Button>\r\n            </Row>\r\n            <Row>\r\n              <Col span={24}>\r\n                <Table dataSource={dataSource} columns={columns} />\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n          <ModalForm />\r\n        </Form.Provider>\r\n      </fieldset>\r\n    </>\r\n  );\r\n}\r\n","import {\r\n  Form,\r\n  Row,\r\n  Col,\r\n  Table,\r\n  Select,\r\n  Input,\r\n  Button,\r\n  Modal,\r\n  InputNumber,\r\n} from \"antd\";\r\nimport { DeleteOutlined } from \"@ant-design/icons\";\r\nimport \"../containersCommonFile/container.css\";\r\nimport { useState } from \"react\";\r\n\r\nexport default function ContainerFundsRHRescission() {\r\n  const [form] = Form.useForm();\r\n  const [visible, setVisible] = useState(false);\r\n  const [dataSource, setDataSource] = useState([\r\n    {\r\n      key: \"\",\r\n      type: \"\",\r\n      descriptionBenef: \"\",\r\n      amount: \"\",\r\n      total: \"\",\r\n    },\r\n  ]);\r\n  const [count, setCount] = useState(0);\r\n\r\n  const ModalForm = () => {\r\n    return (\r\n      <Modal\r\n        title=\"Informe um novo Item\"\r\n        visible={visible}\r\n        okText=\"Adicionar\"\r\n        cancelText=\"Sair\"\r\n        onCancel={() => setVisible(false)}\r\n        onOk={addItem}\r\n      >\r\n        <Form name=\"addItem\" form={form}>\r\n          <Form.Item name={\"typeItem\"} label={\"Tipo\"}>\r\n            <Select>\r\n              <Select.Option key={1} value=\"Proventos\">\r\n                Proventos\r\n              </Select.Option>\r\n              <Select.Option key={2} value=\"Vantagem\">\r\n                Vantagem\r\n              </Select.Option>\r\n              <Select.Option key={3} value=\"Descontos\">\r\n                Descontos\r\n              </Select.Option>\r\n            </Select>\r\n          </Form.Item>\r\n          <Form.Item name={\"descriptItem\"} label={\"Descrição\"}>\r\n            <Input />\r\n          </Form.Item>\r\n          <Form.Item name={\"amountItem\"} label={\"Quantidade\"}>\r\n            <InputNumber min={1} />\r\n          </Form.Item>\r\n          <Form.Item name={\"totalItem\"} label={\"Total em Valor\"}>\r\n            <InputNumber addonBefore=\"R$\" />\r\n          </Form.Item>\r\n        </Form>\r\n      </Modal>\r\n    );\r\n  };\r\n\r\n  interface Item {\r\n    key: string;\r\n    type: string;\r\n    descriptionBenef: string;\r\n    amount: string;\r\n    total: string;\r\n  }\r\n\r\n  const addItem = (value) => {\r\n    //console.log(value);\r\n    form.submit();\r\n  };\r\n\r\n  const onDelete = (record, index) => {\r\n    //console.log(record);\r\n    //console.log(index);\r\n\r\n    setDataSource((prev) => {\r\n      return prev.filter((item) => item.key !== record.key);\r\n    });\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: \"Tipo\",\r\n      dataIndex: \"type\",\r\n      key: \"type\",\r\n      width: \"20%\",\r\n    },\r\n    {\r\n      title: \"Descrição\",\r\n      dataIndex: \"descriptionBenef\",\r\n      key: \"descriptionBenef\",\r\n      width: \"40%\",\r\n    },\r\n    {\r\n      title: \"Quantidade\",\r\n      dataIndex: \"amount\",\r\n      key: \"amount\",\r\n      width: \"10%\",\r\n    },\r\n    {\r\n      title: \"Total em Valor\",\r\n      dataIndex: \"total\",\r\n      key: \"total\",\r\n      width: \"20%\",\r\n    },\r\n    {\r\n      title: \"Ação\",\r\n      dataIndex: \"action\",\r\n      key: \"action\",\r\n      width: \"10%\",\r\n      render: (text, record, index) =>\r\n        record.type ? (\r\n          <a>\r\n            <DeleteOutlined\r\n              style={{ color: \"red\", fontSize: \"20px\" }}\r\n              onClick={() => {\r\n                onDelete(record, index);\r\n              }}\r\n            />\r\n          </a>\r\n        ) : (\r\n          <a></a>\r\n        ),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <fieldset>\r\n        <legend>Verbas RH Rescisão</legend>\r\n        <Form.Provider\r\n          onFormFinish={(name, { values, forms }) => {\r\n            if (name === \"addItem\") {\r\n              const newData: Item = {\r\n                key: count.toString(),\r\n                type: values.typeItem,\r\n                descriptionBenef: values.descriptItem,\r\n                amount: values.amountItem,\r\n                total: values.totalItem,\r\n              };\r\n\r\n              setCount((num) => num + 1);\r\n\r\n              setDataSource((prev) => {\r\n                return [newData, ...prev];\r\n              });\r\n            }\r\n          }}\r\n        >\r\n          <Form\r\n            name=\"tableItem\"\r\n            form={form}\r\n            labelCol={{ span: 10 }}\r\n            wrapperCol={{ span: 9 }}\r\n            labelAlign=\"left\"\r\n          >\r\n            <Row>\r\n              <Button\r\n                type=\"primary\"\r\n                style={{ marginBottom: 16 }}\r\n                onClick={() => setVisible(true)}\r\n              >\r\n                Novo Item\r\n              </Button>\r\n            </Row>\r\n            <Row>\r\n              <Col span={24}>\r\n                <Table dataSource={dataSource} columns={columns} />\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n          <ModalForm />\r\n        </Form.Provider>\r\n      </fieldset>\r\n    </>\r\n  );\r\n}\r\n","import ContainerIdentify from \"../containers/containersCommonFile/containerIdentify\";\r\nimport ContainerEmployee from \"../containers/containersCommonFile/containeEmployee\";\r\nimport ContainerRecission from \"../containers/containersRescission/containerRecission\";\r\nimport ContainerObservation from \"../containers/containersCommonFile/containerObservation\";\r\nimport ContainerStability from \"../containers/containersRescission/containerStability\";\r\nimport ContainerAnalyzeRH from \"../containers/containersRescission/containerAnalyzeRH\";\r\nimport ContainerBenefits from \"../containers/containersRescission/containerBenefits\";\r\nimport ContainerRemuneration from \"../containers/containersRescission/containerRemuneration\";\r\nimport ContainerFundsRHRescission from \"../containers/containersRescission/containerFundsRHRescission\";\r\n\r\nexport default function FormPageRescission() {\r\n  return (\r\n    <>\r\n      <div>\r\n        <ContainerIdentify />\r\n        <ContainerEmployee />\r\n        <ContainerStability />\r\n        <ContainerRecission />\r\n        <ContainerAnalyzeRH />\r\n        <ContainerBenefits />\r\n        <ContainerRemuneration />\r\n        <ContainerFundsRHRescission />\r\n        <ContainerObservation />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import \"./App.css\";\nimport FormPageRescission from \"./layoutPage/FormPageRescission\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <FormPageRescission />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}